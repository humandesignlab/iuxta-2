{"version":3,"file":"static/webpack/static/development/pages/index.js.3a2d6ba6817d7b953bcb.hot-update.js","sources":["webpack:///./components/StuffList.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Table,\n  Menu,\n  Dropdown,\n  Input,\n  Button,\n  Form,\n  Checkbox\n} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as stuffActions from \"../store\";\nimport moment from \"moment\";\n\nclass StuffList extends React.Component {\n  state = {\n    lookup: this.props.lookup,\n    inputValue: \"\",\n    thisMoment: moment().format(\"LLLL\"),\n    isChecked: false\n  };\n\n  handleChange = async (e, data) => {\n    if (this.props.lookup.includes(data.value)) {\n      for (var i = this.props.lookup.length - 1; i >= 0; i--) {\n        if (this.props.lookup[i] === data.value) {\n          this.props.lookup.splice(i, 1);\n        }\n      }\n      this.updateProps();\n      console.log(this.props);\n    } else {\n      this.props.lookup.push(data.value);\n      this.updateProps();\n      console.log(\"this.props Content\", this.props);\n    }\n  };\n\n  renderData() {\n    console.log(\"this.props StuffList\", this.props);\n\n    return (\n      <Table compact celled definition>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Add to List </Table.HeaderCell>\n            <Table.HeaderCell>ASIN</Table.HeaderCell>\n            <Table.HeaderCell>EAN</Table.HeaderCell>\n            <Table.HeaderCell>Brand</Table.HeaderCell>\n            <Table.HeaderCell>Title</Table.HeaderCell>\n            <Table.HeaderCell>ListPrice</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {this.props.stuff !== undefined && this.props.stuff.length > 1 ? (\n            this.props.stuff.map((item, index) => {\n              const newValue =\n                item.ItemAttributes.ListPrice !== undefined\n                  ? item.ItemAttributes.ListPrice.FormattedPrice\n                  : \"No Price available\";\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell collapsing>\n                    <Checkbox\n                      checked={this.props.isChecked}\n                      value={{\n                        asin: item.ASIN,\n                        ean: item.ItemAttributes.EAN,\n                        title: item.ItemAttributes.Title,\n                        price: newValue\n                      }}\n                      onChange={this.handleChange}\n                    />\n                  </Table.Cell>\n                  <Table.Cell>{item.ASIN}</Table.Cell>\n                  <Table.Cell>{item.ItemAttributes.EAN}</Table.Cell>\n                  <Table.Cell>{item.ItemAttributes.Brand}</Table.Cell>\n                  <Table.Cell>{item.ItemAttributes.Title}</Table.Cell>\n                  <Table.Cell>{newValue}</Table.Cell>\n                </Table.Row>\n              );\n            })\n          ) : (\n            <Table.Row>\n              <Table.Cell>No Data</Table.Cell>\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  render() {\n    return <div>{this.renderData()}</div>;\n  }\n}\n\nStuffList.propTypes = {\n  stuffActions: PropTypes.object,\n  stuff: PropTypes.array,\n  lookup: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    stuff: state.stuff,\n    lookup: state.lookup\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    stuffActions: bindActionCreators(stuffActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StuffList);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAeA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAcA;AAIA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AARA;AAkBA;AASA;;;AAEA;AACA;AACA;;;;AAhFA;AACA;AAkFA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}